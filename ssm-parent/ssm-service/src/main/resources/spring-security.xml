<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!--静态资源过滤
        pattern 请求的url，
        security=none: 不需要认证，所有人都可以访问
    -->
    <security:http pattern="/*.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <!--
        auto-config:这个是一个自动配置过滤器(Filter)的属性, 帮我们创建login页面，login认证处理方法
        use-expressions:"是否使用spel表达式"，如果使用表达式：hasRole('ROLE_USER')
    -->
    <security:http auto-config="true" use-expressions="true">
        <!-- 配置拦截的请求地址，用户要访问任何请求地址都必须有ROLE_USER角色才可以访问  -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />

        <!--form-login 表单认证
            login-page: 登陆页面
            login-processing-url: 处理login请求的方法
            default-target-url: 默认认证成功后跳转的页面
            authentication-failure-url: 认证失败后跳转的页面
            username-parameter: 请求过来的用户名参数
            authentication-success-forward-url: 认证成功后跳转页面，default-target-url无效了.
        -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login"
                authentication-failure-url="/failer.jsp"
                authentication-success-forward-url="/pages/main.jsp"
                username-parameter="username"
                password-parameter="password"
        />
        <!--关闭跨域请求限制-->
        <security:csrf disabled="true"/>
        <!--invalidate-session: 让session失效, logout-success-url退出成功后跳转的页面
        logout-url处理退出登陆的url
        -->
        <!--没有权限的页面处理-->
        <security:access-denied-handler error-page="/403.jsp"/>
        <security:logout invalidate-session="true" logout-success-url="/login.jsp" logout-url="/logout"/>
    </security:http>

    <!--开启jsr250注解 权限验证
    <security:global-method-security jsr250-annotations="enabled"/>
    -->

    <!--security 自带的权限验证注解 @Secured
    <security:global-method-security secured-annotations="enabled"/>
    -->

    <!--spring自带的注解-->
    <security:global-method-security pre-post-annotations="enabled"/>


    <!--配置授权信息-->
    <security:authentication-manager>
        <!--使用自定义认证服务-->
        <security:authentication-provider user-service-ref="userService">
            <!--拿页面传过来的密码，跟数据库返回的密码进匹配.  encoder.matches-->
            <security:password-encoder ref="encoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans>